using System;
using System.Globalization;

namespace iCloud.vCard.Net.Utils;

internal class DateTimeHelper
{
    /// <summary>Parses a string containing a date/time value.</summary>
    /// <param name="value">A string containing a date/time value.</param>
    /// <returns>
    ///     The parsed date, or null if no date could be parsed.
    /// </returns>
    /// <remarks>
    ///     Some revision dates, such as those generated by Outlook,
    ///     are not directly supported by the .NET DateTime parser.
    ///     This function attempts to accomodate the non-standard formats.
    /// </remarks>
    public static DateTime? ParseDate(string? value)
    {
        if (DateTime.TryParse(value, out var result))
            return new DateTime?(result);
        return DateTime.TryParseExact(value, "yyyyMMdd\\THHmmss\\Z", null, DateTimeStyles.AssumeUniversal, out result) ? new DateTime?(result) : new DateTime?();
    }

    public static DateTime? TryParseDate(string? value)
    {
        if (DateTime.TryParse(value, out var result))
            return result;
        else if (DateTime.TryParseExact(value, "yyyyMMdd", CultureInfo.InvariantCulture, DateTimeStyles.None, out result))
            return result;
        else return null;
    }
}
